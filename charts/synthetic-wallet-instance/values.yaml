replicaCount: 1
imagePullSecrets: []
nameOverride: ''
fullnameOverride: ''
podAnnotations: {}
podSecurityContext: {}
web:
  image:
    repository: dimozone/synthetic-wallet-instance
    pullPolicy: IfNotPresent
    tag: 6cfd8e3
  securityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - all
  env:
    LOG_LEVEL: info
    MON_PORT: '8888'
    GRPC_PORT: '8086'
    ENCLAVE_CID: '16'
    ENCLAVE_PORT: '5000'
  ports:
    - name: mon-http
      containerPort: 8888
      protocol: TCP
    - name: grpc
      containerPort: 8086
      protocol: TCP
  resources:
    limits:
      cpu: 250m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 256Mi
enclave:
  image:
    repository: dimozone/synthetic-wallet-enclave
    pullPolicy: IfNotPresent
    tag: 30ba023
  securityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - all
  env:
    ENCLAVE_CPU_COUNT: '2'
    ENCLAVE_MEMORY_SIZE: '1000'
    ENCLAVE_CID: '16'
    AWS_REGION: us-east-2
    ENCLAVE_DEBUG_MODE: 'yes'
  ports: null
  resources:
    limits:
      aws.ec2.nitro/nitro_enclaves: '1'
      hugepages-1Gi: 1Gi
      memory: 512Mi
      cpu: 500m
    requests:
      aws.ec2.nitro/nitro_enclaves: '1'
      hugepages-1Gi: 1Gi
      memory: 128Mi
      cpu: 100m
service:
  type: ClusterIP
  ports:
    mon-http:
      port: 8888
      targetPort: mon-http
      protocol: TCP
    grpc:
      port: 8086
      targetPort: grpc
      protocol: TCP
ingress:
  enabled: false
  className: nginx
  annotations:
    nginx.ingress.kubernetes.io/auth-tls-secret: ingress/cf-origin-ca
    nginx.ingress.kubernetes.io/auth-tls-verify-client: 'on'
    nginx.ingress.kubernetes.io/enable-cors: 'true'
    nginx.ingress.kubernetes.io/cors-allow-origin: https://app.dev.dimo.zone
    nginx.ingress.kubernetes.io/limit-rps: '3'
    external-dns.alpha.kubernetes.io/hostname: synthetic-wallet-instance.dev.dimo.zone
  hosts:
    - host: synthetic-wallet-instance.dev.dimo.zone
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
nodeSelector:
  enclave: 'true'
affinity: {}
podDisruptionBudget:
  minAvailable: 0
kafka:
  clusterName: kafka-dev-dimo-kafka
  topics: []
serviceAccount:
  create: true
  annotations: {}
  name: ''
serviceMonitor:
  enabled: true
  path: /metrics
  port: mon-http
  interval: 30s
